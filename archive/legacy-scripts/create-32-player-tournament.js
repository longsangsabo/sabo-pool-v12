// =============================================
// CREATE 32-PLAYER TOURNAMENT FOR TESTING
// T·∫°o tournament v·ªõi 32 ng∆∞·ªùi ƒë·ªÉ test n√∫t "T·∫°o b·∫£ng ƒë·∫•u"
// =============================================

const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://vtrrfpttqhqcjkqzqgei.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ0cnJmcHR0cWhxY2prcXpxZ2VpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzE0OTY1NDksImV4cCI6MjA0NzA3MjU0OX0.IUJGrmZGZSqTJEdhOLtb1KdgGW7-m7_FGYIRm-8rIzY';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function createTournament32() {
  console.log('üéØ T·∫°o tournament v·ªõi 32 ng∆∞·ªùi ch∆°i...');
  
  try {
    // 1. T·∫°o tournament
    const { data: tournament, error: tournamentError } = await supabase
      .from('tournaments')
      .insert({
        name: 'Test Tournament 32 Players',
        tournament_type: 'double_elimination',
        max_participants: 32,
        status: 'registration',
        description: 'Tournament test v·ªõi 32 ng∆∞·ªùi ch∆°i cho SABO double elimination'
      })
      .select()
      .single();

    if (tournamentError) {
      console.error('‚ùå L·ªói t·∫°o tournament:', tournamentError);
      return;
    }

    console.log('‚úÖ Tournament created:', tournament.id);
    console.log('üìù Name:', tournament.name);

    // 2. T·∫°o 32 fake users
    const fakeUsers = [];
    for (let i = 1; i <= 32; i++) {
      fakeUsers.push({
        tournament_id: tournament.id,
        user_id: `fake-user-${String(i).padStart(2, '0')}`,
        registration_status: 'confirmed',
        payment_status: 'paid',
        registration_date: new Date().toISOString()
      });
    }

    const { error: regError } = await supabase
      .from('tournament_registrations')
      .insert(fakeUsers);

    if (regError) {
      console.error('‚ùå L·ªói t·∫°o registrations:', regError);
      return;
    }

    console.log('‚úÖ 32 ng∆∞·ªùi ch∆°i ƒë√£ ƒëƒÉng k√Ω');

    // 3. Hi·ªÉn th·ªã th√¥ng tin
    console.log('\n' + '='.repeat(50));
    console.log('üéâ TOURNAMENT S·∫¥N S√ÄNG!');
    console.log('='.repeat(50));
    console.log(`üìã Tournament ID: ${tournament.id}`);
    console.log(`üë• S·ªë ng∆∞·ªùi ch∆°i: 32`);
    console.log(`üéÆ Lo·∫°i tournament: double_elimination`);
    console.log(`üì± Truy c·∫≠p: http://localhost:8000`);
    console.log('');
    console.log('üìç H∆Ø·ªöNG D·∫™N TEST:');
    console.log('1. V√†o trang http://localhost:8000');
    console.log('2. T√¨m tournament "Test Tournament 32 Players"');
    console.log('3. Click n√∫t "T·∫°o b·∫£ng ƒë·∫•u" (ho·∫∑c "T·∫°o SABO Bracket")');
    console.log('4. Ki·ªÉm tra xem c√≥ t·∫°o ƒë∆∞·ª£c 53 tr·∫≠n ƒë·∫•u kh√¥ng');
    console.log('5. Xem b·∫£ng ƒë·∫•u c√≥ hi·ªÉn th·ªã 2 groups A & B kh√¥ng');

  } catch (error) {
    console.error('‚ùå L·ªói:', error);
  }
}

// Ch·∫°y
createTournament32();
