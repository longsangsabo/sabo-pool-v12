#!/bin/bash

# üßπ CHALLENGE SYSTEM CLEANUP SCRIPT
# D·ªçn d·∫πp c√°c file c≈© kh√¥ng c√≤n ƒë√∫ng ƒë·ªÉ tr√°nh tham chi·∫øu sai

echo "üßπ CHALLENGE SYSTEM CLEANUP - STARTING..."
echo "================================================"

# T·∫°o th∆∞ m·ª•c archive cho c√°c file c≈©
mkdir -p archive/deprecated-challenge-files

echo "üìÅ Created archive directory for deprecated files"

# Danh s√°ch c√°c file c≈© c·∫ßn di chuy·ªÉn v√†o archive
deprecated_files=(
    "CHALLENGE_SYSTEM_README.md"
    "CHALLENGE_SYSTEM_COMPLETE_DOCUMENTATION.md"
    "REBUILD_CHALLENGE_SYSTEM_PLAN.md"
    "CHALLENGE_NOTIFICATION_SYSTEM_DESIGN.md"
    "CHALLENGE_NOTIFICATION_COMPLETE.md"
    "CHALLENGES_V3_PRODUCTION_DEPLOYMENT.md"
    "AUTO_EXPIRE_CHALLENGE_TEST.md"
    "MOBILE_CHALLENGE_OPTIMIZATIONS.md"
    "STEP1_ANALYZE_EXISTING_FUNCTIONS.sql"
    "STEP2_DROP_ALL_FUNCTIONS.sql"
    "STEP2_5_SPA_MANAGEMENT_SYSTEM.sql"
    "STEP2_5_SPA_MANAGEMENT_FIXED.sql"
    "STEP2_5_SPA_MANAGEMENT_CORRECTED.sql"
    "STEP3_CLUB_APPROVAL_SYSTEM.sql"
    "STEP3_CLUB_APPROVAL_FUNCTIONS.sql"
    "STEP3_CLUB_APPROVAL_CORRECTED.sql"
    "STEP3_CREATE_SPA_FUNCTIONS.sql"
    "STEP4_MATCH_MANAGEMENT_SYSTEM.sql"
    "STEP4_MATCH_MANAGEMENT_CORRECTED.sql"
    "STEP4_CREATE_CHALLENGE_FUNCTIONS.sql"
    "STEP5_CLUB_APPROVAL_SYSTEM.sql"
    "STEP5_NOTIFICATION_SYSTEM.sql"
    "STEP5_NOTIFICATION_CORRECTED.sql"
    "STEP6_TRIGGERS_AUTOMATION_CORRECTED.sql"
    "COMPLETE_CLEANUP_ALL_FUNCTIONS.sql"
    "CORRECT_DROP_FUNCTIONS.sql"
    "SAFE_CLEANUP_APPROACH.sql"
    "MANUAL_EXECUTION_CLEANUP.sql"
    "MANUAL_STEP1_DROP_OLD_FUNCTIONS.sql"
    "CREATE_accept_open_challenge_v3.sql"
    "FIX_accept_open_challenge_v3.sql"
    "SIMPLE_ACCEPT_CHALLENGE_V3.sql"
    "TEST_SINGLE_FUNCTION.sql"
    "EXECUTE_IN_SUPABASE.sql"
    "FINAL_FIX_SPA_COLUMN.sql"
    "FIX_STATUS_CHECK.sql"
    "CHECK_FUNCTION_SIGNATURES.sql"
    "fix-accept-open-challenge.sql"
    "fix-accept-open-challenge-response.sql"
    "debug-triggers.cjs"
    "debug-triggers-simple.cjs"
    "execute-rebuild.cjs"
    "find-challenger-rank-error.cjs"
    "fix-accept-challenge-function.cjs"
    "fix-accept-challenge-function.js"
    "fix-function-v2.cjs"
    "quick-fix.cjs"
    "test-challenge-system.cjs"
    "test-challenge-workflow.cjs"
)

# Di chuy·ªÉn c√°c file deprecated v√†o archive
moved_count=0
for file in "${deprecated_files[@]}"; do
    if [ -f "$file" ]; then
        mv "$file" "archive/deprecated-challenge-files/"
        echo "üì¶ Moved: $file"
        ((moved_count++))
    fi
done

echo ""
echo "‚úÖ Moved $moved_count deprecated files to archive"

# T·∫°o file README trong archive ƒë·ªÉ gi·∫£i th√≠ch
cat > archive/deprecated-challenge-files/README.md << 'EOF'
# üì¶ DEPRECATED CHALLENGE SYSTEM FILES

**‚ö†Ô∏è WARNING**: These files are deprecated and should NOT be used for reference.

## Why these files are here:
- These files represent old versions of the Challenge System
- They contain outdated logic and incorrect implementations
- Using these files may cause confusion and system errors

## Current Official Documentation:
- **CHALLENGE_SYSTEM_OFFICIAL_DOCUMENTATION.md** (in root directory)
- This is the ONLY file that should be referenced for current system behavior

## What happened to these files:
- Moved here on August 24, 2025 during system cleanup
- Part of Challenge System v3.0 finalization
- Kept for historical reference only

## If you need to reference old behavior:
- Check git history for detailed change logs
- Use the official documentation for current implementation
- Contact the development team for specific questions

---

*üèÜ The current Challenge System v3.0 is fully operational and documented in the root directory.*
EOF

echo "üìù Created README in archive directory"

# Ki·ªÉm tra c√°c file quan tr·ªçng c√≤n l·∫°i
echo ""
echo "üîç REMAINING IMPORTANT FILES:"
echo "================================"

important_files=(
    "CHALLENGE_SYSTEM_OFFICIAL_DOCUMENTATION.md"
    "FIX_CHALLENGE_WORKFLOW.sql"
    "CHECK_CHALLENGES_SCHEMA.sql" 
    "fix-spa-issue.cjs"
)

for file in "${important_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ KEPT: $file (IMPORTANT - DO NOT REMOVE)"
    else
        echo "‚ùå MISSING: $file (SHOULD EXIST)"
    fi
done

echo ""
echo "üéØ CLEANUP SUMMARY:"
echo "==================="
echo "‚úÖ Created official documentation: CHALLENGE_SYSTEM_OFFICIAL_DOCUMENTATION.md"
echo "‚úÖ Moved $moved_count deprecated files to archive/"
echo "‚úÖ Kept essential files for system operation"
echo "‚úÖ Added README to explain deprecated files"
echo ""
echo "üèÜ Challenge System cleanup completed successfully!"
echo "üìñ Use CHALLENGE_SYSTEM_OFFICIAL_DOCUMENTATION.md as the single source of truth"

# T·∫°o file .gitignore cho th∆∞ m·ª•c archive n·∫øu ch∆∞a c√≥
if [ ! -f "archive/.gitignore" ]; then
    echo "# Archive directory - deprecated files for reference only" > archive/.gitignore
fi

echo ""
echo "üîê Added .gitignore to archive directory"
echo "================================================"
echo "üßπ CHALLENGE SYSTEM CLEANUP - COMPLETED!"
