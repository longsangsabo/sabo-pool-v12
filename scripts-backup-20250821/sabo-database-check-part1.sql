-- ===================================================================
-- üîç SABO DATABASE STRUCTURE ANALYSIS
-- Ki·ªÉm tra c√°ch SABO Double Elimination ghi data v√† t√¨m conflicts
-- ===================================================================

-- üìä PHASE 1: B·∫¢NG TOURNAMENTS - C·∫•u tr√∫c ch√≠nh
SELECT 
  'TOURNAMENTS_TABLE_COLUMNS' as analysis_type,
  column_name,
  data_type,
  is_nullable,
  CASE 
    WHEN column_name IN ('tournament_type', 'format', 'bracket_type') THEN 'üéØ TOURNAMENT_TYPE'
    WHEN column_name IN ('status', 'winner_id', 'completed_at') THEN 'üìä STATUS_TRACKING'  
    WHEN column_name IN ('id', 'name', 'club_id') THEN 'üè∑Ô∏è BASIC_INFO'
    ELSE 'üìù OTHER'
  END as column_category
FROM information_schema.columns 
WHERE table_name = 'tournaments' 
  AND table_schema = 'public'
ORDER BY column_category, column_name;

-- üìä PHASE 2: B·∫¢NG TOURNAMENT_MATCHES - Schema Analysis  
SELECT 
  'TOURNAMENT_MATCHES_COLUMNS' as analysis_type,
  column_name,
  data_type,
  is_nullable,
  CASE 
    WHEN column_name IN ('round_number', 'match_number', 'bracket_type', 'branch_type') THEN 'üéØ SABO_STRUCTURE'
    WHEN column_name IN ('player1_id', 'player2_id', 'winner_id') THEN 'üë• PLAYERS'
    WHEN column_name IN ('score_player1', 'score_player2', 'status') THEN '‚öΩ SCORING'
    WHEN column_name IN ('tournament_id', 'id') THEN 'üîó RELATIONSHIPS'
    ELSE 'üìù OTHER'
  END as column_category
FROM information_schema.columns 
WHERE table_name = 'tournament_matches' 
  AND table_schema = 'public'
ORDER BY column_category, column_name;

-- üìä PHASE 3: KI·ªÇM TRA SABO FUNCTIONS & OPERATIONS
SELECT 
  'SABO_FUNCTIONS_ANALYSIS' as analysis_type,
  proname as function_name,
  pronargs as param_count,
  CASE 
    WHEN proname LIKE '%generate%' THEN 'üèóÔ∏è BRACKET_GENERATION'
    WHEN proname LIKE '%advance%' THEN '‚ñ∂Ô∏è ADVANCEMENT_LOGIC'  
    WHEN proname LIKE '%submit%' THEN '‚öΩ SCORE_SUBMISSION'
    WHEN proname LIKE '%validate%' OR proname LIKE '%health%' THEN '‚úÖ VALIDATION'
    ELSE 'üîß OTHER'
  END as function_category
FROM pg_proc 
WHERE proname LIKE '%sabo%' 
  AND pronamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public')
ORDER BY function_category, proname;
